# autogenerated from automake.am with automake.py
# and slightly modified

PACKAGE = gimp
TOP = ..\..
PRJ_TOP = ..
!include $(TOP)\glib\build\win32\make.msc

!INCLUDE $(PRJ_TOP)\gimpdefs.msc
PKG_VER = $(GIMP_VER)

top_srcdir = $(PRJ_TOP)
top_builddir = $(PRJ_TOP)
includedir = $(PRJ_TOP)
LT_RELEASE = $(PKG_VER)

SUBDIRS = composite paint-funcs base config xcf core file text \
	dialogs display paint vectors pdb plug-in tools widgets gui \
	actions menus gegl

sub-all: 
	for %d in ($(SUBDIRS)) do nmake -nologo -f makefile.msc sub-one THIS=%d

sub-one:
	cd $(THIS)
	nmake -nologo -f makefile.msc $(TARGET)
	cd ..

clean :: sub-clean

sub-clean:
	for %d in ($(SUBDIRS)) do nmake -nologo -f makefile.msc sub-one THIS=%d TARGET=clean

LDFLAGS = /link /subsystem:console /machine:ix86 $(LINKDEBUG)


GIMP_CORE_OBJECTS = \
	widgets/widgets-enums.obj \
	display/display-enums.obj \
	display/gimpdisplayoptions.obj \
	\
	gimp-log.obj \
	\
	base/appbase.lib \
	composite/appcomposite.lib \
	config/appconfig.lib \
	core/appcore.lib \
	file/appfile.lib \
	gegl/appgegl.lib \
	paint/apppaint.lib \
	paint-funcs/apppaint-funcs.lib \
	pdb/apppdb.lib \
	plug-in/appplug-in.lib \
	text/apptext.lib \
	vectors/appvectors.lib \
	plug-in/appplug-in.lib \
	xcf/xcf.lib \

PKG_LINK = \
	$(top_builddir)/libgimpbase/gimpbase-$(LT_RELEASE).lib \
	$(top_builddir)/libgimpcolor/gimpcolor-$(LT_RELEASE).lib \
	$(top_builddir)/libgimpconfig/gimpconfig-$(LT_RELEASE).lib \
	$(top_builddir)/libgimpmath/gimpmath-$(LT_RELEASE).lib \
	$(top_builddir)/libgimpthumb/gimpthumb-$(LT_RELEASE).lib \
	$(top_builddir)/libgimpmodule/gimpmodule-$(LT_RELEASE).lib \
	$(top_builddir)/libgimpwidgets/gimpwidgets-$(LT_RELEASE).lib \
	$(GLIB_LIBS) $(GTHREAD_LIBS) \
	$(GTK2_LIBS) \
	$(GIMP_THREAD_LIBS) \
	$(GIMP_MP_LIBS) \
	$(CAIRO_LIBS) \
	$(INTL_LIBS) \
	$(LIBART_LIBS) \
	$(PANGOWIN32_LIBS) \
	$(PANGOCAIRO_LIBS) \
	$(GEGL_LIBS) $(BABL_LIBS) \
!IFNDEF PANGO_WIN32_EXTENDED
	$(PANGOFT2_LIBS) \
	$(FREETYPE2_LIBS) \
	$(FONTCONFIG_LIBS) \
!ENDIF

gimp_LDFLAGS = \
	-export-dynamic -export-symbols $(srcdir)/gimp.sym

INCLUDES = \
	-DG_LOG_DOMAIN=\"Gimp\" \
	-DGIMP_APP_GLUE_COMPILATION \
	-I$(top_srcdir) \
	-I$(top_srcdir)/app \
	$(GTK2_CFLAGS) \
	$(GEGL_CFLAGS) \
!IFNDEF PANGO_WIN32_EXTENDED
	$(FONTCONFIG_CFLAGS) \
	$(FREETYPE2_CFLAGS) \
!ENDIF
	-I$(includedir)

OBJECTS = \
	main.obj \
	batch.obj \
	errors.obj \
	sanity.obj \
	unique.obj \
	units.obj \
	version.obj \
	\
	actions/appactions.lib \
	menus/appmenus.lib \
	tools/apptools.lib \
	gui/appgui.lib \
	dialogs/appdialogs.lib \
	widgets/appwidgets.lib \
	display/appdisplay.lib \

app_console.obj : app.c
	$(CC) $(CFLAGS) -DGIMP_CONSOLE_COMPILATION -c -Foapp_console.obj app.c

EXTRA_DIST = \
	makefile.mingw \
	makefile.mingw.in \
	makefile.msc \
	gimp.rc \
	gimp.sym \
	fileicon.ico \
	wilber.ico \
	arch/i386/mmx/detect_mmx.S \
	arch/i386/mmx/paint_funcs_mmx.S \
	detect_mmx.S

scriptdata = \
	

all : \
	$(PRJ_TOP)\config.h \
	sub-all \
	gimp-core-$(PKG_VER).dll \
	$(PACKAGE).exe \
	gimp-console.exe


$(PRJ_TOP)\config.h: $(PRJ_TOP)\config.h.win32
	copy $(PRJ_TOP)\config.h.win32 $(PRJ_TOP)\config.h

RESOURCE = $(PACKAGE).res

$(PACKAGE).lib : $(OBJECTS)
	lib /out:$(PACKAGE).lib $(OBJECTS)

gimp-core-$(PKG_VER).dll : $(GIMP_CORE_OBJECTS) gimpcore.def
	$(CC) $(CFLAGS) -LD -Fegimp-core-$(PKG_VER).dll $(GIMP_CORE_OBJECTS) $(PKG_LINK) user32.lib advapi32.lib wsock32.lib $(LDFLAGS) /def:gimpcore.def

$(PACKAGE)-$(PKG_VER).dll : $(PKG_LINK) $(OBJECTS) $(PACKAGE).def
	$(CC) $(CFLAGS) -LD -Fe$(PACKAGE)-$(PKG_VER).dll $(OBJECTS) $(PKG_LINK) \
	user32.lib kernel32.lib advapi32.lib wsock32.lib $(LDFLAGS) /def:$(PACKAGE).def

gimp-console.exe : $(OBJECTS) app_console.obj $(PACKAGE).res $(PKG_LINK)
	$(CC) $(CFLAGS) -Fegimp-console.exe $(PACKAGE).res app_console.obj $(OBJECTS) $(PKG_LINK) \
	gimp-core-$(PKG_VER).lib \
	user32.lib kernel32.lib advapi32.lib shell32.lib wsock32.lib winspool.lib $(LDFLAGS)

$(PACKAGE).exe : $(OBJECTS) app.obj $(PACKAGE).res $(PKG_LINK)
	$(CC) $(CFLAGS) -Fe$(PACKAGE).exe $(PACKAGE).res app.obj $(OBJECTS) \
	gimp-core-$(PKG_VER).lib \
	$(PKG_LINK) user32.lib kernel32.lib advapi32.lib shell32.lib wsock32.lib winspool.lib $(LDFLAGS)

.c.obj :
	$(CC) $(CFLAGS) -c $<
