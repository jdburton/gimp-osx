# autogenerated from automake.am with automake.py
# and slightly modified
PACKAGE = appdisplay
TOP = ..\..\..
PRJ_TOP = ..\..
!include $(TOP)\glib\build\win32\make.msc

!INCLUDE $(PRJ_TOP)\gimpdefs.msc
PKG_VER = $(GIMP_VER)


INCLUDES = \
	-FImsvc_recommended_pragmas.h \
	-I$(PRJ_TOP) \
	-I$(PRJ_TOP)/app \
	$(GTK2_CFLAGS) \
	$(GEGL_CFLAGS)

DEFINES = \
	-DG_LOG_DOMAIN=\"Gimp-Display\"

PKG_LINK = \
	$(GLIB_LIBS) $(GTK2_LIBS) \
	..\base\appbase-$(PKG_VER).lib \
	..\core\appcore-$(PKG_VER).lib \

OBJECTS = \
	gimpcanvas.obj \
	gimpdisplay.obj \
	gimpdisplay-foreach.obj \
	gimpdisplay-handlers.obj \
	gimpdisplayshell.obj \
	gimpdisplayshell-appearance.obj \
	gimpdisplayshell-autoscroll.obj \
	gimpdisplayshell-callbacks.obj \
	gimpdisplayshell-close.obj \
	gimpdisplayshell-coords.obj \
	gimpdisplayshell-cursor.obj \
	gimpdisplayshell-dnd.obj \
	gimpdisplayshell-draw.obj \
	gimpdisplayshell-filter.obj \
	gimpdisplayshell-filter-dialog.obj \
	gimpdisplayshell-handlers.obj \
	gimpdisplayshell-layer-select.obj \
	gimpdisplayshell-preview.obj \
	gimpdisplayshell-progress.obj \
	gimpdisplayshell-render.obj \
	gimpdisplayshell-scale.obj \
	gimpdisplayshell-scroll.obj \
	gimpdisplayshell-selection.obj \
	gimpdisplayshell-title.obj \
	gimpdisplayshell-transform.obj \
	gimpnavigationeditor.obj \
	gimpscalecombobox.obj \
	gimpstatusbar.obj \
	gimpdisplayshell-icon.obj \
	gimpdisplayshell-scale-dialog.obj \
#	display-enums.obj \

all : \
	$(PRJ_TOP)\config.h \
	display-enums.obj \
	gimpdisplayoptions.obj \
	$(PACKAGE).lib \
!IFDEF DLLGIMP
	$(PACKAGE)-$(PKG_VER).dll
!ENDIF

$(PRJ_TOP)\config.h: $(PRJ_TOP)\config.h.win32
	copy $(PRJ_TOP)\config.h.win32 $(PRJ_TOP)\config.h

RESOURCE = $(PACKAGE).res

$(PACKAGE).lib : $(OBJECTS)
	lib /out:$(PACKAGE).lib $(OBJECTS)

$(PACKAGE)-$(PKG_VER).dll : $(OBJECTS) display-enums.obj $(PACKAGE).def
	$(CC) $(CFLAGS) -LD -Fe$(PACKAGE)-$(PKG_VER).dll $(OBJECTS) $(PKG_LINK) user32.lib advapi32.lib wsock32.lib $(LDFLAGS) /def:$(PACKAGE).def

$(PACKAGE).exe : $(OBJECTS) $(PACKAGE).def $(PACKAGE).res
	$(CC) $(CFLAGS) -Fe$(PACKAGE).exe $(PACKAGE).res $(OBJECTS) $(PKG_LINK) \
	user32.lib advapi32.lib shell32.lib wsock32.lib winspool.lib $(LDFLAGS) /def:$(PACKAGE).def

.c.obj :
	$(CC) $(CFLAGS) -c $(PKG_CFLAGS) $<
