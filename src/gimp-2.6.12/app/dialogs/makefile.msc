# autogenerated from automake.am with automake.py
# and slightly modified
PACKAGE = appdialogs
TOP = ..\..\..
PRJ_TOP = ..\..
!include $(TOP)\glib\build\win32\make.msc

!INCLUDE $(PRJ_TOP)\gimpdefs.msc
PKG_VER = $(GIMP_VER)


INCLUDES = \
	-FImsvc_recommended_pragmas.h \
	-I$(PRJ_TOP) \
	-I$(PRJ_TOP)/app \
	$(GTK2_CFLAGS) \

DEFINES = \
	-DG_LOG_DOMAIN=\"Gimp-Dialog\"

PKG_LINK = \
	$(GLIB_LIBS) $(GTK2_LIBS) \
	..\base\appbase-$(PKG_VER).lib \
	..\core\appcore-$(PKG_VER).lib \

OBJECTS = \
	about-dialog.obj \
	channel-options-dialog.obj \
	convert-dialog.obj \
	dialogs-constructors.obj \
	dialogs.obj \
	fade-dialog.obj \
	file-open-dialog.obj \
	file-open-location-dialog.obj \
	file-save-dialog.obj \
	grid-dialog.obj \
	image-merge-layers-dialog.obj \
	image-new-dialog.obj \
	image-properties-dialog.obj \
	image-scale-dialog.obj \
	keyboard-shortcuts-dialog.obj \
	layer-add-mask-dialog.obj \
	layer-options-dialog.obj \
	module-dialog.obj \
	offset-dialog.obj \
	palette-import-dialog.obj \
	preferences-dialog.obj \
	print-size-dialog.obj \
	quit-dialog.obj \
	resize-dialog.obj \
	resolution-calibrate-dialog.obj \
	scale-dialog.obj \
	stroke-dialog.obj \
	template-options-dialog.obj \
	tips-dialog.obj \
	tips-parser.obj \
	user-install-dialog.obj \
	vectors-export-dialog.obj \
	vectors-import-dialog.obj \
	vectors-options-dialog.obj \

all : \
	$(PRJ_TOP)\config.h \
	authors.h \
	$(PACKAGE).lib \
!IFDEF DLLGIMP
	$(PACKAGE)-$(PKG_VER).dll
!ENDIF

$(PRJ_TOP)\config.h: $(PRJ_TOP)\config.h.win32
	copy $(PRJ_TOP)\config.h.win32 $(PRJ_TOP)\config.h

authors.h : authors.xsl ..\..\authors.xml
	xsltproc authors.xsl ..\..\authors.xml > authors.h
	
RESOURCE = $(PACKAGE).res

$(PACKAGE).lib : $(OBJECTS)
	lib /out:$(PACKAGE).lib $(OBJECTS)

$(PACKAGE)-$(PKG_VER).dll : $(OBJECTS) display-enums.obj $(PACKAGE).def
	$(CC) $(CFLAGS) -LD -Fe$(PACKAGE)-$(PKG_VER).dll $(OBJECTS) $(PKG_LINK) user32.lib advapi32.lib wsock32.lib $(LDFLAGS) /def:$(PACKAGE).def

$(PACKAGE).exe : $(OBJECTS) $(PACKAGE).def $(PACKAGE).res
	$(CC) $(CFLAGS) -Fe$(PACKAGE).exe $(PACKAGE).res $(OBJECTS) $(PKG_LINK) \
	user32.lib advapi32.lib shell32.lib wsock32.lib winspool.lib $(LDFLAGS) /def:$(PACKAGE).def

.c.obj :
	$(CC) $(CFLAGS) -c $(PKG_CFLAGS) $<
