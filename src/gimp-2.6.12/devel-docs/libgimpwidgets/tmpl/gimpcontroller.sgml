<!-- ##### SECTION Title ##### -->
GimpController

<!-- ##### SECTION Short_Description ##### -->
Pluggable GIMP input controller modules.

<!-- ##### SECTION Long_Description ##### -->
<para>
An abstract interface for implementing arbitrary input controllers.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### SECTION Image ##### -->


<!-- ##### ENUM GimpControllerEventType ##### -->
<para>

</para>

@GIMP_CONTROLLER_EVENT_TRIGGER: 
@GIMP_CONTROLLER_EVENT_VALUE: 

<!-- ##### STRUCT GimpControllerEventAny ##### -->
<para>

</para>

@type: 
@source: 
@event_id: 

<!-- ##### STRUCT GimpControllerEventTrigger ##### -->
<para>

</para>

@type: 
@source: 
@event_id: 

<!-- ##### STRUCT GimpControllerEventValue ##### -->
<para>

</para>

@type: 
@source: 
@event_id: 
@value: 

<!-- ##### UNION GimpControllerEvent ##### -->
<para>

</para>


<!-- ##### STRUCT GimpController ##### -->
<para>

</para>


<!-- ##### SIGNAL GimpController::event ##### -->
<para>

</para>

@gimpcontroller: the object which received the signal.
@arg1: 
@Returns: 

<!-- ##### ARG GimpController:name ##### -->
<para>

</para>

<!-- ##### ARG GimpController:state ##### -->
<para>

</para>

<!-- ##### FUNCTION gimp_controller_new ##### -->
<para>

</para>

@controller_type: 
@Returns: 


<!-- ##### FUNCTION gimp_controller_get_n_events ##### -->
<para>

</para>

@controller: 
@Returns: 


<!-- ##### FUNCTION gimp_controller_get_event_name ##### -->
<para>

</para>

@controller: 
@event_id: 
@Returns: 


<!-- ##### FUNCTION gimp_controller_get_event_blurb ##### -->
<para>

</para>

@controller: 
@event_id: 
@Returns: 


<!-- ##### FUNCTION gimp_controller_event ##### -->
<para>

</para>

@controller: 
@event: 
@Returns: 


